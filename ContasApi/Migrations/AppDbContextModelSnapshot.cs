// <auto-generated />
using System;
using ContasApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ContasApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ContasApi.Models.Conta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataDePagamento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDeVencimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiasDeAtraso")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RegraDeAtraso")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorCorrigido")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ValorOriginal")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.ToTable("Contas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataDePagamento = new DateTime(2022, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataDeVencimento = new DateTime(2022, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiasDeAtraso = 0,
                            Nome = "Internet",
                            RegraDeAtraso = "",
                            ValorCorrigido = 129.90m,
                            ValorOriginal = 129.90m
                        },
                        new
                        {
                            Id = 2,
                            DataDePagamento = new DateTime(2022, 4, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataDeVencimento = new DateTime(2022, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiasDeAtraso = 2,
                            Nome = "Energia",
                            RegraDeAtraso = "Multa de 2% + Juros de 0,1% ao dia",
                            ValorCorrigido = 511.00m,
                            ValorOriginal = 500.00m
                        },
                        new
                        {
                            Id = 3,
                            DataDePagamento = new DateTime(2022, 4, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataDeVencimento = new DateTime(2022, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiasDeAtraso = 8,
                            Nome = "Aluguel",
                            RegraDeAtraso = "Multa de 3% + Juros de 0,2% ao dia",
                            ValorCorrigido = 1569.00m,
                            ValorOriginal = 1500.00m
                        },
                        new
                        {
                            Id = 4,
                            DataDePagamento = new DateTime(2022, 4, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DataDeVencimento = new DateTime(2022, 4, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DiasDeAtraso = 20,
                            Nome = "Telefone",
                            RegraDeAtraso = "Multa de 5% + Juros de 0,3% ao dia",
                            ValorCorrigido = 166.50m,
                            ValorOriginal = 150.00m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
